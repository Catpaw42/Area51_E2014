/*
 * This file was generated - do not edit it directly !!
 * Generated by AuDAO tool, a product of Spolecne s.r.o.
 * For more information please visit http://www.spoledge.com
 */
package database.dto;

import com.spoledge.audao.db.dto.AbstractDto;

/**
 * This is a DTO class.
 *
 * @author generated
 */
public class Requisition extends AbstractDto {

    public enum HenvistTil {
        RADIOLOGISK,
        KLINISK
    }

    public enum HospitalOenske {
        HILLEROED,
        FREDERIKSSUND
    }

    public enum Pririotering {
        HASTE,
        RUTINE,
        FREMSKYNDET,
        PAKKEFORLOEB
    }

    public enum AmbulantKoersel {
        INGEN,
        SIDDENDE,
        LIGGENDE
    }

    public enum IndlaeggelseTransport {
        GAA_MED_PORTOER,
        GAA_UDEN_PORTOER,
        KOERESTOL,
        SENG
    }

    public enum UndersoegelseModalitet {
        PET_CT,
        CT,
        CT_KONTRAST,
        ULTRALYD,
        MR,
        OTHER
    }

    public enum Status {
        PENDING,
        CANCELED,
        APPROVED,
        DECLINED,
        BOOKED
    }

    ////////////////////////////////////////////////////////////////////////////
    // Static
    ////////////////////////////////////////////////////////////////////////////

    public static final String TABLE = "requisition";

    ////////////////////////////////////////////////////////////////////////////
    // Attributes
    ////////////////////////////////////////////////////////////////////////////

    private Requisition.HenvistTil henvistTil;
    private Requisition.HospitalOenske hospitalOenske;
    private Requisition.Pririotering pririotering;
    private Requisition.AmbulantKoersel ambulantKoersel;
    private Requisition.IndlaeggelseTransport indlaeggelseTransport;
    private Requisition.UndersoegelseModalitet undersoegelseModalitet;
    private Requisition.Status status;
    private Long rekvisitionId;
    private Boolean samtykke;
    private Boolean ambulant;
    private String datoForslag;
    private Boolean udfIndlagt;
    private Boolean graviditet;
    private String cave;

    ////////////////////////////////////////////////////////////////////////////
    // Constructors
    ////////////////////////////////////////////////////////////////////////////

    /**
     * Creates a new empty DTO.
     */
    public Requisition() {
    }

    ////////////////////////////////////////////////////////////////////////////
    // Public
    ////////////////////////////////////////////////////////////////////////////

    public Requisition.HenvistTil getHenvistTil() {
        return henvistTil;
    }

    public void setHenvistTil( Requisition.HenvistTil _val) {
        this.henvistTil = _val;
    }

    public Requisition.HospitalOenske getHospitalOenske() {
        return hospitalOenske;
    }

    public void setHospitalOenske( Requisition.HospitalOenske _val) {
        this.hospitalOenske = _val;
    }

    public Requisition.Pririotering getPririotering() {
        return pririotering;
    }

    public void setPririotering( Requisition.Pririotering _val) {
        this.pririotering = _val;
    }

    public Requisition.AmbulantKoersel getAmbulantKoersel() {
        return ambulantKoersel;
    }

    public void setAmbulantKoersel( Requisition.AmbulantKoersel _val) {
        this.ambulantKoersel = _val;
    }

    public Requisition.IndlaeggelseTransport getIndlaeggelseTransport() {
        return indlaeggelseTransport;
    }

    public void setIndlaeggelseTransport( Requisition.IndlaeggelseTransport _val) {
        this.indlaeggelseTransport = _val;
    }

    public Requisition.UndersoegelseModalitet getUndersoegelseModalitet() {
        return undersoegelseModalitet;
    }

    public void setUndersoegelseModalitet( Requisition.UndersoegelseModalitet _val) {
        this.undersoegelseModalitet = _val;
    }

    public Requisition.Status getStatus() {
        return status;
    }

    public void setStatus( Requisition.Status _val) {
        this.status = _val;
    }

    public Long getRekvisitionId() {
        return rekvisitionId;
    }

    public void setRekvisitionId( Long _val) {
        this.rekvisitionId = _val;
    }

    public Boolean getSamtykke() {
        return samtykke;
    }

    public void setSamtykke( Boolean _val) {
        this.samtykke = _val;
    }

    public Boolean getAmbulant() {
        return ambulant;
    }

    public void setAmbulant( Boolean _val) {
        this.ambulant = _val;
    }

    public String getDatoForslag() {
        return datoForslag;
    }

    public void setDatoForslag( String _val) {
        this.datoForslag = _val;
    }

    public Boolean getUdfIndlagt() {
        return udfIndlagt;
    }

    public void setUdfIndlagt( Boolean _val) {
        this.udfIndlagt = _val;
    }

    public Boolean getGraviditet() {
        return graviditet;
    }

    public void setGraviditet( Boolean _val) {
        this.graviditet = _val;
    }

    public String getCave() {
        return cave;
    }

    public void setCave( String _val) {
        this.cave = _val;
    }

    /**
     * Indicates whether some other object is "equal to" this one.
     * Uses 'columns' equality type.
     */
    @Override
    public boolean equals( Object _other ) {
        if (_other == this) return true;
        if (_other == null || (!(_other instanceof Requisition))) return false;

        Requisition _o = (Requisition) _other;

        if ( henvistTil != _o.henvistTil ) return false;

        if ( hospitalOenske != _o.hospitalOenske ) return false;

        if ( pririotering != _o.pririotering ) return false;

        if ( ambulantKoersel != _o.ambulantKoersel ) return false;

        if ( indlaeggelseTransport != _o.indlaeggelseTransport ) return false;

        if ( undersoegelseModalitet != _o.undersoegelseModalitet ) return false;

        if ( status != _o.status ) return false;

        if ( rekvisitionId == null ) {
            if ( _o.rekvisitionId != null ) return false;
        }
        else if ( _o.rekvisitionId == null || rekvisitionId.longValue() != _o.rekvisitionId.longValue()) return false;

        if ( samtykke == null ) {
            if ( _o.samtykke != null ) return false;
        }
        else if ( _o.samtykke == null || samtykke.booleanValue() != _o.samtykke.booleanValue()) return false;

        if ( ambulant == null ) {
            if ( _o.ambulant != null ) return false;
        }
        else if ( _o.ambulant == null || ambulant.booleanValue() != _o.ambulant.booleanValue()) return false;

        if ( datoForslag == null ) {
            if ( _o.datoForslag != null ) return false;
        }
        else if ( _o.datoForslag == null || !datoForslag.equals( _o.datoForslag )) return false;

        if ( udfIndlagt == null ) {
            if ( _o.udfIndlagt != null ) return false;
        }
        else if ( _o.udfIndlagt == null || udfIndlagt.booleanValue() != _o.udfIndlagt.booleanValue()) return false;

        if ( graviditet == null ) {
            if ( _o.graviditet != null ) return false;
        }
        else if ( _o.graviditet == null || graviditet.booleanValue() != _o.graviditet.booleanValue()) return false;

        if ( cave == null ) {
            if ( _o.cave != null ) return false;
        }
        else if ( _o.cave == null || !cave.equals( _o.cave )) return false;

        return true;
    }

    /**
     * Returns a hash code value for the object.
     */
    @Override
    public int hashCode() {
        int _ret = 2063792252; // = "Requisition".hashCode()
        _ret += henvistTil == null ? 0 : henvistTil.hashCode();
        _ret = 29 * _ret + (hospitalOenske == null ? 0 : hospitalOenske.hashCode());
        _ret = 29 * _ret + (pririotering == null ? 0 : pririotering.hashCode());
        _ret = 29 * _ret + (ambulantKoersel == null ? 0 : ambulantKoersel.hashCode());
        _ret = 29 * _ret + (indlaeggelseTransport == null ? 0 : indlaeggelseTransport.hashCode());
        _ret = 29 * _ret + (undersoegelseModalitet == null ? 0 : undersoegelseModalitet.hashCode());
        _ret = 29 * _ret + (status == null ? 0 : status.hashCode());
        _ret = 29 * _ret + (rekvisitionId == null ? 0 : (int)(rekvisitionId ^ (rekvisitionId >>> 32)));
        _ret = 29 * _ret + (samtykke == null ? 0 : (samtykke ? 1 : 0));
        _ret = 29 * _ret + (ambulant == null ? 0 : (ambulant ? 1 : 0));
        _ret = 29 * _ret + (datoForslag == null ? 0 : datoForslag.hashCode());
        _ret = 29 * _ret + (udfIndlagt == null ? 0 : (udfIndlagt ? 1 : 0));
        _ret = 29 * _ret + (graviditet == null ? 0 : (graviditet ? 1 : 0));
        _ret = 29 * _ret + (cave == null ? 0 : cave.hashCode());

        return _ret;
    }


    ////////////////////////////////////////////////////////////////////////////
    // Protected
    ////////////////////////////////////////////////////////////////////////////
		
    /**
     * Constructs the content for the toString() method.
     */
    protected void contentToString(StringBuffer sb) {
        append( sb, "henvistTil", henvistTil );
        append( sb, "hospitalOenske", hospitalOenske );
        append( sb, "pririotering", pririotering );
        append( sb, "ambulantKoersel", ambulantKoersel );
        append( sb, "indlaeggelseTransport", indlaeggelseTransport );
        append( sb, "undersoegelseModalitet", undersoegelseModalitet );
        append( sb, "status", status );
        append( sb, "rekvisitionId", rekvisitionId );
        append( sb, "samtykke", samtykke );
        append( sb, "ambulant", ambulant );
        append( sb, "datoForslag", datoForslag );
        append( sb, "udfIndlagt", udfIndlagt );
        append( sb, "graviditet", graviditet );
        append( sb, "cave", cave );
    }
}
