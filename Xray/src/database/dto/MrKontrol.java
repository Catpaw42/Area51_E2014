/*
 * This file was generated - do not edit it directly !!
 * Generated by AuDAO tool, a product of Spolecne s.r.o.
 * For more information please visit http://www.spoledge.com
 */
package database.dto;

import com.spoledge.audao.db.dto.AbstractDto;

/**
 * This is a DTO class.
 *
 * @author generated
 */
public class MrKontrol extends AbstractDto {

    public enum MrBoern {
        UDEN_SEDERING,
        I_GENEREL_ANAESTESI
    }

    public enum MrVoksen {
        UDEN_SEDERING,
        MED_SEDERING,
        I_GENEREL_ANAESTESI
    }

    ////////////////////////////////////////////////////////////////////////////
    // Static
    ////////////////////////////////////////////////////////////////////////////

    public static final String TABLE = "mr_kontrol";

    ////////////////////////////////////////////////////////////////////////////
    // Attributes
    ////////////////////////////////////////////////////////////////////////////

    private Integer mrKontrolskemaId;
    private Integer patientCpr;
    private String tidlBilledDiagnostik;
    private Boolean pacemaker;
    private Boolean metalImplantater;
    private String metalImplantaterBeskrivelse;
    private Boolean andetMetalisk;
    private String AndetMetalImplBeskrivelse;
    private Boolean nyresygdom;
    private String nyresygdomBeskrivelse;
    private Boolean graviditet;
    private Integer graviditetUge;
    private Boolean klaustrofobi;
    private String praepForsyn;
    private Integer hoejde;
    private Integer vaegt;
    private Integer rekvirentId;
    private MrKontrol.MrBoern mrBoern;
    private MrKontrol.MrVoksen mrVoksen;

    ////////////////////////////////////////////////////////////////////////////
    // Constructors
    ////////////////////////////////////////////////////////////////////////////

    /**
     * Creates a new empty DTO.
     */
    public MrKontrol() {
    }

    ////////////////////////////////////////////////////////////////////////////
    // Public
    ////////////////////////////////////////////////////////////////////////////

    public Integer getMrKontrolskemaId() {
        return mrKontrolskemaId;
    }

    public void setMrKontrolskemaId( Integer _val) {
        this.mrKontrolskemaId = _val;
    }

    public Integer getPatientCpr() {
        return patientCpr;
    }

    public void setPatientCpr( Integer _val) {
        this.patientCpr = _val;
    }

    public String getTidlBilledDiagnostik() {
        return tidlBilledDiagnostik;
    }

    public void setTidlBilledDiagnostik( String _val) {
        this.tidlBilledDiagnostik = _val;
    }

    public Boolean getPacemaker() {
        return pacemaker;
    }

    public void setPacemaker( Boolean _val) {
        this.pacemaker = _val;
    }

    public Boolean getMetalImplantater() {
        return metalImplantater;
    }

    public void setMetalImplantater( Boolean _val) {
        this.metalImplantater = _val;
    }

    public String getMetalImplantaterBeskrivelse() {
        return metalImplantaterBeskrivelse;
    }

    public void setMetalImplantaterBeskrivelse( String _val) {
        this.metalImplantaterBeskrivelse = _val;
    }

    public Boolean getAndetMetalisk() {
        return andetMetalisk;
    }

    public void setAndetMetalisk( Boolean _val) {
        this.andetMetalisk = _val;
    }

    public String getAndetMetalImplBeskrivelse() {
        return AndetMetalImplBeskrivelse;
    }

    public void setAndetMetalImplBeskrivelse( String _val) {
        this.AndetMetalImplBeskrivelse = _val;
    }

    public Boolean getNyresygdom() {
        return nyresygdom;
    }

    public void setNyresygdom( Boolean _val) {
        this.nyresygdom = _val;
    }

    public String getNyresygdomBeskrivelse() {
        return nyresygdomBeskrivelse;
    }

    public void setNyresygdomBeskrivelse( String _val) {
        this.nyresygdomBeskrivelse = _val;
    }

    public Boolean getGraviditet() {
        return graviditet;
    }

    public void setGraviditet( Boolean _val) {
        this.graviditet = _val;
    }

    public Integer getGraviditetUge() {
        return graviditetUge;
    }

    public void setGraviditetUge( Integer _val) {
        this.graviditetUge = _val;
    }

    public Boolean getKlaustrofobi() {
        return klaustrofobi;
    }

    public void setKlaustrofobi( Boolean _val) {
        this.klaustrofobi = _val;
    }

    public String getPraepForsyn() {
        return praepForsyn;
    }

    public void setPraepForsyn( String _val) {
        this.praepForsyn = _val;
    }

    public Integer getHoejde() {
        return hoejde;
    }

    public void setHoejde( Integer _val) {
        this.hoejde = _val;
    }

    public Integer getVaegt() {
        return vaegt;
    }

    public void setVaegt( Integer _val) {
        this.vaegt = _val;
    }

    public Integer getRekvirentId() {
        return rekvirentId;
    }

    public void setRekvirentId( Integer _val) {
        this.rekvirentId = _val;
    }

    public MrKontrol.MrBoern getMrBoern() {
        return mrBoern;
    }

    public void setMrBoern( MrKontrol.MrBoern _val) {
        this.mrBoern = _val;
    }

    public MrKontrol.MrVoksen getMrVoksen() {
        return mrVoksen;
    }

    public void setMrVoksen( MrKontrol.MrVoksen _val) {
        this.mrVoksen = _val;
    }

    /**
     * Indicates whether some other object is "equal to" this one.
     * Uses 'columns' equality type.
     */
    @Override
    public boolean equals( Object _other ) {
        if (_other == this) return true;
        if (_other == null || (!(_other instanceof MrKontrol))) return false;

        MrKontrol _o = (MrKontrol) _other;

        if ( mrKontrolskemaId == null ) {
            if ( _o.mrKontrolskemaId != null ) return false;
        }
        else if ( _o.mrKontrolskemaId == null || mrKontrolskemaId.intValue() != _o.mrKontrolskemaId.intValue()) return false;

        if ( patientCpr == null ) {
            if ( _o.patientCpr != null ) return false;
        }
        else if ( _o.patientCpr == null || patientCpr.intValue() != _o.patientCpr.intValue()) return false;

        if ( tidlBilledDiagnostik == null ) {
            if ( _o.tidlBilledDiagnostik != null ) return false;
        }
        else if ( _o.tidlBilledDiagnostik == null || !tidlBilledDiagnostik.equals( _o.tidlBilledDiagnostik )) return false;

        if ( pacemaker == null ) {
            if ( _o.pacemaker != null ) return false;
        }
        else if ( _o.pacemaker == null || pacemaker.booleanValue() != _o.pacemaker.booleanValue()) return false;

        if ( metalImplantater == null ) {
            if ( _o.metalImplantater != null ) return false;
        }
        else if ( _o.metalImplantater == null || metalImplantater.booleanValue() != _o.metalImplantater.booleanValue()) return false;

        if ( metalImplantaterBeskrivelse == null ) {
            if ( _o.metalImplantaterBeskrivelse != null ) return false;
        }
        else if ( _o.metalImplantaterBeskrivelse == null || !metalImplantaterBeskrivelse.equals( _o.metalImplantaterBeskrivelse )) return false;

        if ( andetMetalisk == null ) {
            if ( _o.andetMetalisk != null ) return false;
        }
        else if ( _o.andetMetalisk == null || andetMetalisk.booleanValue() != _o.andetMetalisk.booleanValue()) return false;

        if ( metalImplantaterBeskrivelse == null ) {
            if ( _o.metalImplantaterBeskrivelse != null ) return false;
        }
        else if ( _o.metalImplantaterBeskrivelse == null || !metalImplantaterBeskrivelse.equals( _o.metalImplantaterBeskrivelse )) return false;

        if ( nyresygdom == null ) {
            if ( _o.nyresygdom != null ) return false;
        }
        else if ( _o.nyresygdom == null || nyresygdom.booleanValue() != _o.nyresygdom.booleanValue()) return false;

        if ( nyresygdomBeskrivelse == null ) {
            if ( _o.nyresygdomBeskrivelse != null ) return false;
        }
        else if ( _o.nyresygdomBeskrivelse == null || !nyresygdomBeskrivelse.equals( _o.nyresygdomBeskrivelse )) return false;

        if ( graviditet == null ) {
            if ( _o.graviditet != null ) return false;
        }
        else if ( _o.graviditet == null || graviditet.booleanValue() != _o.graviditet.booleanValue()) return false;

        if ( graviditetUge == null ) {
            if ( _o.graviditetUge != null ) return false;
        }
        else if ( _o.graviditetUge == null || graviditetUge.intValue() != _o.graviditetUge.intValue()) return false;

        if ( klaustrofobi == null ) {
            if ( _o.klaustrofobi != null ) return false;
        }
        else if ( _o.klaustrofobi == null || klaustrofobi.booleanValue() != _o.klaustrofobi.booleanValue()) return false;

        if ( praepForsyn == null ) {
            if ( _o.praepForsyn != null ) return false;
        }
        else if ( _o.praepForsyn == null || !praepForsyn.equals( _o.praepForsyn )) return false;

        if ( hoejde == null ) {
            if ( _o.hoejde != null ) return false;
        }
        else if ( _o.hoejde == null || hoejde.intValue() != _o.hoejde.intValue()) return false;

        if ( vaegt == null ) {
            if ( _o.vaegt != null ) return false;
        }
        else if ( _o.vaegt == null || vaegt.intValue() != _o.vaegt.intValue()) return false;

        if ( rekvirentId == null ) {
            if ( _o.rekvirentId != null ) return false;
        }
        else if ( _o.rekvirentId == null || rekvirentId.intValue() != _o.rekvirentId.intValue()) return false;

        if ( mrBoern != _o.mrBoern ) return false;

        if ( mrVoksen != _o.mrVoksen ) return false;

        return true;
    }

    /**
     * Returns a hash code value for the object.
     */
    @Override
    public int hashCode() {
        int _ret = 503133664; // = "MrKontrol".hashCode()
        _ret += mrKontrolskemaId == null ? 0 : mrKontrolskemaId;
        _ret = 29 * _ret + (patientCpr == null ? 0 : patientCpr);
        _ret = 29 * _ret + (tidlBilledDiagnostik == null ? 0 : tidlBilledDiagnostik.hashCode());
        _ret = 29 * _ret + (pacemaker == null ? 0 : (pacemaker ? 1 : 0));
        _ret = 29 * _ret + (metalImplantater == null ? 0 : (metalImplantater ? 1 : 0));
        _ret = 29 * _ret + (metalImplantaterBeskrivelse == null ? 0 : metalImplantaterBeskrivelse.hashCode());
        _ret = 29 * _ret + (andetMetalisk == null ? 0 : (andetMetalisk ? 1 : 0));
        _ret = 29 * _ret + (metalImplantaterBeskrivelse == null ? 0 : metalImplantaterBeskrivelse.hashCode());
        _ret = 29 * _ret + (nyresygdom == null ? 0 : (nyresygdom ? 1 : 0));
        _ret = 29 * _ret + (nyresygdomBeskrivelse == null ? 0 : nyresygdomBeskrivelse.hashCode());
        _ret = 29 * _ret + (graviditet == null ? 0 : (graviditet ? 1 : 0));
        _ret = 29 * _ret + (graviditetUge == null ? 0 : graviditetUge);
        _ret = 29 * _ret + (klaustrofobi == null ? 0 : (klaustrofobi ? 1 : 0));
        _ret = 29 * _ret + (praepForsyn == null ? 0 : praepForsyn.hashCode());
        _ret = 29 * _ret + (hoejde == null ? 0 : hoejde);
        _ret = 29 * _ret + (vaegt == null ? 0 : vaegt);
        _ret = 29 * _ret + (rekvirentId == null ? 0 : rekvirentId);
        _ret = 29 * _ret + (mrBoern == null ? 0 : mrBoern.hashCode());
        _ret = 29 * _ret + (mrVoksen == null ? 0 : mrVoksen.hashCode());

        return _ret;
    }


    ////////////////////////////////////////////////////////////////////////////
    // Protected
    ////////////////////////////////////////////////////////////////////////////
		
    /**
     * Constructs the content for the toString() method.
     */
    protected void contentToString(StringBuffer sb) {
        append( sb, "mrKontrolskemaId", mrKontrolskemaId );
        append( sb, "patientCpr", patientCpr );
        append( sb, "tidlBilledDiagnostik", tidlBilledDiagnostik );
        append( sb, "pacemaker", pacemaker );
        append( sb, "metalImplantater", metalImplantater );
        append( sb, "metalImplantaterBeskrivelse", metalImplantaterBeskrivelse );
        append( sb, "andetMetalisk", andetMetalisk );
        append( sb, "metalImplantaterBeskrivelse", metalImplantaterBeskrivelse );
        append( sb, "nyresygdom", nyresygdom );
        append( sb, "nyresygdomBeskrivelse", nyresygdomBeskrivelse );
        append( sb, "graviditet", graviditet );
        append( sb, "graviditetUge", graviditetUge );
        append( sb, "klaustrofobi", klaustrofobi );
        append( sb, "praepForsyn", praepForsyn );
        append( sb, "hoejde", hoejde );
        append( sb, "vaegt", vaegt );
        append( sb, "rekvirentId", rekvirentId );
        append( sb, "mrBoern", mrBoern );
        append( sb, "mrVoksen", mrVoksen );
    }
}
